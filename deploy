#! /usr/bin/env bash

nomad_auth=$1
nomad_address=$2
nomad_job_file=$3
datacenters=$4
tag=$5
count=$6
final_nomad_job_file=/tmp/nomad-deploy/jobs/$(basename "$3")
workfile=`mktemp`

prepare_nomad_file() {
  # Make the temporary directory and create the new job file
  mkdir -p /tmp/nomad-deploy/jobs 
  touch "$final_nomad_job_file"

  if [[ "$tag" != "" ]]
  then
    # use base ref from ex. refs/heads/master and refs/tags/v0.0.6
    tag=`echo "$tag" |cut -d "/" -f3`
    if [[ "$tag" == "main" || "$tag" == "master" ]]
    then
      tag="latest"
    fi
    echo "using docker tag $tag"
    cat "$nomad_job_file" | sed -r "s/:latest/:$tag/g" >| "$workfile"
  else 
    cat "$nomad_job_file" >| "$workfile"
  fi

  # convert hcl-file to json
  if [[ "$nomad_job_file" == *".hcl" ]]
  then
    echo "converting job-file $nomad_job_file to json"
    nomad job run -output "$workfile" >| "$final_nomad_job_file"
  else
    # use as-is
    cat "$workfile" > "$final_nomad_job_file"
  fi

  if [[ $datacenters != "" ]]
  then
    echo "replacing datacenter values"
    cat "$final_nomad_job_file" | jq ".Job.Datacenters = [\"$datacenters\"]" >| "$workfile"
    cat "$workfile" > "$final_nomad_job_file"
  fi

  if [[ $count != "" ]]
  then
    echo "replacing number of deployments"
    cat "$final_nomad_job_file" | jq ".Job.TaskGroups[0].Count = $count" >| "$workfile"
    cat "$workfile" > "$final_nomad_job_file"
  fi
}

if [ -f "$nomad_job_file" ]; then
  echo "$nomad_job_file exists"
  prepare_nomad_file
  curl -f -s -S -H "Authorization: Basic $nomad_auth" -X POST --data @$final_nomad_job_file "$nomad_address/v1/jobs" | jq
  exit $?
else
  echo "$nomad_job_file does not exist"
  exit 1
fi
